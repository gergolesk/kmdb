{
	"info": {
		"_postman_id": "83cfbf1b-9ddf-4781-ab80-33b79c9ba253",
		"name": "KMDB",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38952177"
	},
	"item": [
		{
			"name": "GET all genres",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/api/genres",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"genres"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET genre",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/api/genres/2",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"genres",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST genre",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Action\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/api/genres",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"genres"
					]
				}
			},
			"response": []
		},
		{
			"name": "PATCH genre",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Action X\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/api/genres/1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"genres",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "DEL genre",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:8080/api/genres/2",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"genres",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET all actors",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/api/actors",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"actors"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET actor",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/api/actors/1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"actors",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET actor by name",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/api/actors?name=nina",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"actors"
					],
					"query": [
						{
							"key": "name",
							"value": "nina"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "POST actor",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Rulon Oboev\",\n    \"birthDate\": \"1992-04-02\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/api/actors",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"actors"
					]
				}
			},
			"response": []
		},
		{
			"name": "PATCH actor",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Rulon Oboev\",\n    \"birthDate\": \"1993-04-02\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/api/actors/2",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"actors",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "DEL actor",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:8080/api/actors/2",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"actors",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET all movies",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/api/movies",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"movies"
					],
					"query": [
						{
							"key": "page",
							"value": "0",
							"disabled": true
						},
						{
							"key": "size",
							"value": "10",
							"disabled": true
						},
						{
							"key": "random",
							"value": "true",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET movie",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var template = `",
							"<style type=\"text/css\">",
							"    .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}",
							"    .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}",
							"    .tftable tr {background-color:#ffffff;}",
							"    .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}",
							"    .tftable tr:hover {background-color:#e0ffff;}",
							"</style>",
							"",
							"<table class=\"tftable\" border=\"1\">",
							"    <tr>",
							"        <th>ID</th>",
							"        <th>Title</th>",
							"        <th>Release Year</th>",
							"        <th>Duration</th>",
							"        <th>Genres</th>",
							"        <th>Actors</th>",
							"    </tr>",
							"    ",
							"    <tr>",
							"        <td>{{response.id}}</td>",
							"        <td>{{response.title}}</td>",
							"        <td>{{response.releaseYear}}</td>",
							"        <td>{{response.duration}}</td>",
							"        <td>{{response.genres}}</td>",
							"        <td>{{response.actors}}</td>",
							"    </tr>",
							"</table>",
							"`;",
							"",
							"function constructVisualizerPayload() {",
							"    return {response: pm.response.json()};",
							"}",
							"",
							"pm.visualizer.set(template, constructVisualizerPayload());"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/api/movies/3",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"movies",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET by title",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var template = `",
							"<style type=\"text/css\">",
							"    .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}",
							"    .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}",
							"    .tftable tr {background-color:#ffffff;}",
							"    .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}",
							"    .tftable tr:hover {background-color:#e0ffff;}",
							"</style>",
							"",
							"<table class=\"tftable\" border=\"1\">",
							"    <tr>",
							"        <th>ID</th>",
							"        <th>Title</th>",
							"        <th>Release Year</th>",
							"        <th>Duration</th>",
							"        <th>Genres</th>",
							"        <th>Actors</th>",
							"    </tr>",
							"    ",
							"    <tr>",
							"        <td>{{response.id}}</td>",
							"        <td>{{response.title}}</td>",
							"        <td>{{response.releaseYear}}</td>",
							"        <td>{{response.duration}}</td>",
							"        <td>{{response.genres}}</td>",
							"        <td>{{response.actors}}</td>",
							"    </tr>",
							"</table>",
							"`;",
							"",
							"function constructVisualizerPayload() {",
							"    return {response: pm.response.json()};",
							"}",
							"",
							"pm.visualizer.set(template, constructVisualizerPayload());"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/api/movies?title=Pa",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"movies"
					],
					"query": [
						{
							"key": "title",
							"value": "Pa"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET movies by genre",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/api/movies?genre=1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"movies"
					],
					"query": [
						{
							"key": "genre",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET movies by year",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/api/movies?year=2010",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"movies"
					],
					"query": [
						{
							"key": "year",
							"value": "2010"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET movies by actor",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/api/movies?actor=1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"movies"
					],
					"query": [
						{
							"key": "actor",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET actors starring in movie",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var template = `",
							"<style type=\"text/css\">",
							"    .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}",
							"    .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}",
							"    .tftable tr {background-color:#ffffff;}",
							"    .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}",
							"    .tftable tr:hover {background-color:#e0ffff;}",
							"</style>",
							"",
							"<table class=\"tftable\" border=\"1\">",
							"    <tr>",
							"        <th>ID</th>",
							"        <th>Title</th>",
							"        <th>Release Year</th>",
							"        <th>Duration</th>",
							"        <th>Genres</th>",
							"        <th>Actors</th>",
							"    </tr>",
							"    ",
							"    <tr>",
							"        <td>{{response.id}}</td>",
							"        <td>{{response.title}}</td>",
							"        <td>{{response.releaseYear}}</td>",
							"        <td>{{response.duration}}</td>",
							"        <td>{{response.genres}}</td>",
							"        <td>{{response.actors}}</td>",
							"    </tr>",
							"</table>",
							"`;",
							"",
							"function constructVisualizerPayload() {",
							"    return {response: pm.response.json()};",
							"}",
							"",
							"pm.visualizer.set(template, constructVisualizerPayload());"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/api/movies/100/actors",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"movies",
						"100",
						"actors"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST movie",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"XXX\",\n    \"releaseYear\": 2012,\n    \"duration\": 18,\n    \"genres\": [\n        {\"id\": 1}, \n        {\"id\": 3} \n    ],\n    \"actors\": [\n        {\"id\": 3},  \n        {\"id\": 2}  \n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/api/movies",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"movies"
					]
				}
			},
			"response": []
		},
		{
			"name": "PATCH movie",
			"request": {
				"method": "PATCH",
				"header": []
			},
			"response": []
		},
		{
			"name": "DEL movie",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:8080/api/movies/2",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"movies",
						"2"
					]
				}
			},
			"response": []
		}
	]
}